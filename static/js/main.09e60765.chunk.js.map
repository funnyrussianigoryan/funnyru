{"version":3,"sources":["Sagas/Sagas.ts","Components/Header/Header.tsx","Components/Results/Result.tsx","Reducers/reducers.ts","index.tsx","Actions/actions.ts"],"names":["watchFetch","fetchAsync","C_Users_User_Desktop_search_search_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","takeEvery","stop","_marked","action","data","fetchAsync$","_context2","put","request","call","fetch","payload","then","res","json","eval","sent","requestSuccess","t0","requestError","_marked2","Header","input","e","target","value","length","fullUrl","dispatch","_this","props","fetched","react_default","createElement","type","placeholder","onChange","this","React","PureComponent","connect","Result","items","className","map","el","key","id","href","html_url","name","stargazers_count","watchers_count","renderResults","state","initialState","status","reducer","arguments","undefined","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","watchFetchDog","ReactDOM","render","es","Fragment","Components_Header_Header","Results_Result","document","getElementById","__webpack_require__","d","__webpack_exports__","search"],"mappings":"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","file":"static/js/main.09e60765.chunk.js","sourcesContent":["import { call, put, takeEvery} from 'redux-saga/effects'\r\nimport {request, requestSuccess, requestError} from '../Actions/actions'\r\n\r\nfunction* watchFetch() {\r\n  yield takeEvery('FETCHED', fetchAsync)\r\n}\r\n\r\nfunction* fetchAsync(action: any) {\r\n  try {\r\n    yield put(request());\r\n    const data = yield call(\r\n      () => {\r\n        return fetch(action.payload)\r\n              .then(res => res.json())\r\n              .then(res => eval(res))\r\n      }\r\n    );\r\n    yield put(requestSuccess(data));\r\n  } catch(e) {\r\n    yield put(requestError())\r\n  }\r\n}\r\n\r\nexport default watchFetch;\r\n\r\n","import React from 'react';\r\nimport './headerStyle.css';\r\nimport {fetched} from '../../Actions/actions'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\ninterface IHeader  {\r\n    dispatch?: any;\r\n}\r\n\r\nclass Header extends React.PureComponent<IHeader> {\r\n\r\n    input = (e: any) => {\r\n        const input = e.target.value;\r\n        if (input.length < 3) return\r\n        const url = 'https://api.github.com/search/repositories?q=';\r\n        const fullUrl = url + input;\r\n        const {dispatch} = this.props;\r\n        dispatch(fetched(fullUrl))\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <header>\r\n                <input type='text' placeholder='Try to find any repositories' onChange={this.input} />\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(Header);\r\n","import React from 'react';\r\nimport './resultStyle.css';\r\nimport {connect} from 'react-redux'\r\n\r\n\r\ninterface IMainProps {\r\n  data?: {items: []};\r\n  dispatch?: any\r\n}\r\n\r\ninterface forCallBack {\r\n  id: number;\r\n  name: string;\r\n  html_url: string;\r\n  stargazers_count: number;\r\n  watchers_count: number;\r\n}\r\n\r\nclass Result extends React.PureComponent<IMainProps> {\r\n\r\n  render() {\r\n    const {data} = this.props;\r\n    if(!data) return null\r\n    const items = data.items;\r\n\r\n    const renderResults = (el: forCallBack) => {\r\n      return (\r\n        <div className=\"result\" key={el.id}>\r\n          <a href={el.html_url}>{el.name}</a>\r\n          <p className='resultData'>Stars: {el.stargazers_count}</p>\r\n          <p className='resultData'>Subscribers: {el.watchers_count}</p>\r\n      </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className='body'>\r\n        {items && items.map((el: forCallBack) => renderResults(el))}\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default connect((state) => state)(Result);\r\n","interface state {\r\n    readonly status: string;\r\n    readonly data: object | null\r\n}\r\n\r\ninterface forAction {\r\n    type: string;\r\n    payload?: any\r\n}\r\n\r\nconst initialState = {\r\n    status: '',\r\n    data: null\r\n  };\r\n\r\nconst reducer = (state: state = initialState, action: forAction) => {\r\nswitch (action.type) {\r\n    case 'REQUESTED':\r\n        return {\r\n            status: 'REQUESTED',\r\n            data: null\r\n        };\r\n    case 'REQUESTED_SUCCEEDED':\r\n        return {\r\n            status: 'REQUESTED_SUCCEEDED',\r\n            data: action.payload\r\n        };\r\n    case 'REQUESTED_FAILED':\r\n        return {\r\n            status: 'REQUESTED_FAILED',\r\n            data: null\r\n            };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Header from './Components/Header/Header';\nimport Result from './Components/Results/Result';\n\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware} from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport reducer from './Reducers/reducers'\nimport watchFetchDog from './Sagas/Sagas'\n\n//creating middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n//creating store with middleware\nconst store = createStore(  \n  reducer,\n  applyMiddleware(sagaMiddleware)\n);\n\n//running saga \nsagaMiddleware.run(watchFetchDog);\n  \nconst Main = () => (\n    <>\n        <Header />\n        <Result />\n    </>\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <Main />\n    </Provider>,\n    document.getElementById('root')\n)\n\n\n","export const request = () => {\r\n    return { type: 'REQUESTED' }\r\n  };\r\n  \r\nexport const requestSuccess = (data: object) => {\r\n    return { type: 'REQUESTED_SUCCEEDED', payload: data }\r\n  };\r\n  \r\nexport const requestError = () => {\r\n    return { type: 'REQUESTED_FAILED' }\r\n  };\r\n  \r\nexport const fetched = (search: string) => {\r\n    return { type: 'FETCHED', payload: search }\r\n  };\r\n\r\nexport const nextPage = () => {\r\n  return { type: 'NEXT_PAGE'}\r\n}\r\n\r\nexport const previousPage = () => {\r\n  return { type: 'PREVIOUS_PAGE'}\r\n}"],"sourceRoot":""}